<?xml version="1.0"?>
<launch>

    <!-- Launch file for develop purposes. It depends on the hand_e_gripper_common package -->
    <!-- This launch file is built for hand_e gripper                                      -->

    <arg name="robot_id" default="robot" />
    <arg name="prefix" default="$(arg robot_id)_" />
    <arg name="base_frame" default="world" />	
    <arg name="sim" default="false" />
    <arg name="fake_driver" default="true" />

    <group ns="$(arg robot_id)">

        <!-- Load the URDF into the ROS Parameter Server -->
        <arg name="xacro_robot" default="$(find ur_gripper_hw_interface)/others/ur_gripper_demo.urdf.xacro" />
        <param name="robot_description" command="$(find xacro)/xacro '$(arg xacro_robot)'  --inorder
                robot_id:=$(arg robot_id)
                prefix:=$(arg prefix)
                base_frame:=$(arg base_frame)
        "/>

        <!-- Load controller -->
        <rosparam file="$(find ur_gripper_hw_interface)/config/hand_e_control.yaml" command="load" subst_value="True"/>

        <!-- Launch controller manager  -->
        <node name="gripper_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" 
            output="screen" args="
                            gripper
                            joint_state_controller
                            "/>

        <!-- Robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" 
            respawn="false" output="screen" />


        <group if="$(arg sim)">

            <!-- Spawn model into gazebo -->
            <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
                args="-urdf -x 0.0 -y 0.0 -z 0.0 -model $(arg robot_id) -param robot_description"/>

        </group>
   

        <group unless="$(arg sim)">

            <!-- Load ur gripper interface config -->
            <rosparam file="$(find ur_gripper_hw_interface)/config/hand_e_hardware.yaml" command="load" subst_value="True"/>
        
            <!-- ur gripper lift hardware interface node -->
            <node name="ur_gripper_hw_interface" pkg="ur_gripper_hw_interface" type="ur_gripper_hw_interface_node" output="screen"/>

            <!-- Launch real lift driver -->
            <!-- Nothing to do -->

            <!-- Launch fake ewellix lift driver -->
            <node if="$(arg fake_driver)" name="ur_gripper_fake_driver" pkg="ur_gripper_hw_interface" type="ur_gripper_fake_driver.py" output="screen"/>


        </group>            


    </group>

    <group if="$(arg sim)">

        <!-- Start gazebo -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="debug" 		  value="false" />
            <arg name="paused" 		  value="false"/>
            <arg name="use_sim_time"  value="true"/>
            <arg name="headless" 	  value="false"/> 
            <arg name="gui" 		  value="true"/>
        </include>

    </group>

    <!-- Start RVIZ -->
    <arg name="rviz_config" default="$(find ur_gripper_hw_interface)/others/test_ur_gripper.rviz"/> 
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)" required="true"/>

            
</launch>
